plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    //added shadowJar and ebean and docker-compose
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'io.ebean' version '12.1.10'
    id 'com.avast.gradle.docker-compose' version "0.8.4"
}

apply plugin: 'org.jetbrains.kotlin.kapt'

group 'org.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    //testCompile group: 'junit', name: 'junit', version: '4.12'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testImplementation 'org.mockito:mockito-core:2.21.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:2.23.0'
    //added
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:2.10.+")
    compile 'io.ebean:ebean:12.1.10'
    compile 'org.postgresql:postgresql:42.2.8'
    compile 'io.ebean:ebean-querybean:12.1.10'
    kapt 'io.ebean:kotlin-querybean-generator:12.1.10'
    annotationProcessor 'io.ebean:querybean-generator:12.1.10'
    compile group: 'io.ebean', name: 'kotlin-querybean-generator', version: '12.1.10'
    testCompile 'io.ebean:ebean-test:12.1.10'
    compile group: 'io.dropwizard', name: 'dropwizard-core', version: '2.0.0'

//    testImplementation(
//            'org.junit.jupiter:junit-jupiter-api:5.0.1',
//            'com.google.code.maven-play-plugin.com.google.code.eamelink-mockito:mockito-all:1.9.1-20110911'
//    )
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

//added
//run {
//    args = ['server', 'config.yml']
//}
//
apply plugin: 'application'
mainClassName = 'SplitBillApp'

/*

*/

//plugins {
//    id 'com.github.johnrengelman.shadow' version '5.2.0'
//}

build {
    dependsOn(shadowJar)
}

shadowJar {
    mergeServiceFiles()
    exclude 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.SF'
    manifest {
        attributes 'Main-Class': 'SpliBillApp'
    }
    archiveName 'app.jar'
}

apply plugin: 'docker-compose'

dockerCompose {
    useComposeFiles = ['database/docker-compose.yml']
}

